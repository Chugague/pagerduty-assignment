on:
  push:
    branches:
      - develop
      - main

env:
  BUILD_ENV: ${{ github.ref_name == 'main' && 'production' || 'test' }}
  TERRAFORM_ENV: ${{ github.ref_name == 'main' && 'prod' || 'test' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Debug ref_name
        run: echo "Branch is ${{ github.ref_name }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: app
        run: npm install

      - name: Build Angular app
        working-directory: app
        run: npm run build:${BUILD_ENV}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        working-directory: app
        run: |
          docker build --build-arg BUILD_ENV=${BUILD_ENV} -t chugague/pagerduty-angular:${{ github.ref_name }} .
          docker push chugague/pagerduty-angular:${{ github.ref_name }}
          docker tag chugague/pagerduty-angular:${{ github.ref_name }} chugague/pagerduty-angular:latest
          docker push chugague/pagerduty-angular:latest

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Deploy with Terraform
        working-directory: terraform/environments/${{ env.TERRAFORM_ENV }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve

